openapi: '3.1.0'
info:
  version: '1.0.0'
  title: Swagger Petstore (Simple)
  description: A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification
  termsOfService: http://helloreverb.com/terms/
  contact:
    name: Swagger API team
    email: foo@example.com
    url: http://swagger.io
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
servers:
    - url: http://petstore.swagger.io/api
paths:
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: findPetById
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type:
              - integer
              - null
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
                schema:
                    "$ref": '#/components/schemas/pet'
            application/xml:
                schema:
                    "$ref": '#/components/schemas/pet'
        '4XX':
          description: unexpected client error
          content:
            text/html:
                schema:
                    "$ref": '#/components/schemas/errorModel'
        '5XX':
          description: unexpected server error
          content:
            text/html:
                schema:
                    "$ref": '#/components/schemas/errorModel'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type:
              - integer
              - null
            format: int64
      responses:
        '204':
          description: pet deleted
        '4XX':
          description: unexpected client error
          content:
            text/html:
                schema:
                    "$ref": '#/components/schemas/errorModel'
        '5XX':
          description: unexpected server error
          content:
            text/html:
                schema:
                    "$ref": '#/components/schemas/errorModel'
components:
    schemas:
        pet:
            type: object
            required:
            - id
            - name
            properties:
              id:
                type: integer
                format: int64
              name:
                type: string
              tag:
                type:
                  - string
                  - null

        errorModel:
            type: object
            required:
            - code
            - message
            properties:
              code:
                type: integer
                format: int32
              message:
                type:
                  - string
                  - null
security: []